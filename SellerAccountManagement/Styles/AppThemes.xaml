<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SellerAccountManagement.Styles"
                    xmlns:metro="http://schemas.codeplex.com/elysium"
                    xmlns:params="http://schemas.codeplex.com/elysium/params"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                     xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <!--Brushes-->
    <SolidColorBrush x:Key="TransparentColorBrush" Color="Transparent" />
    <SolidColorBrush x:Key="GreenBrush" Color="#a6d77b" />
    <SolidColorBrush x:Key="LightGreenBrush" Color="#6648FB13" Opacity="0.7"/>
    <SolidColorBrush x:Key="VioletBrush" Color="#770A6A" />
    <SolidColorBrush x:Key="WhiteBrush" Color="White" />
    <SolidColorBrush x:Key="LightBlueBrush" Color="#83daf6" />


    <!--Styles-->
    <Style x:Key="DefaultTile" TargetType="{x:Type controls:Tile}">
        <Setter Property="FontFamily" Value="Segoe UI Symbol"></Setter>
        <Setter Property="FontSize" Value="50"></Setter>
        <Setter Property="Width" Value="250"></Setter>
        <Setter Property="Height" Value="250"></Setter>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Margin" Value="10,40,40,10"></Setter>
        <Setter Property="Background" Value="{StaticResource LightBlueBrush}"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource TransparentColorBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderThickness"
                                    Value="2" />
                <Setter Property="BorderBrush"
                                    Value="{StaticResource WhiteBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ActionButtonStyle" TargetType="{x:Type Button}">
        <Style.BasedOn>
            <Style TargetType="{x:Type ButtonBase}">
                <Setter Property="Background" Value="{StaticResource LightGreenBrush}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize"
                        Value="{Binding (params:General.ContentFontSize), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                <Setter Property="FontStretch" Value="Normal" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="Focusable" Value="True" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Height" Value="30" />

                <Setter Property="FocusVisualStyle">
                    <Setter.Value>
                        <Style>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle RenderOptions.EdgeMode="Aliased"
                                                   Margin="{TemplateBinding params:General.DefaultPadding}"
                                                   Stroke="Black"
                                                   StrokeThickness="{TemplateBinding params:General.DefaultThicknessValue}"
                                                   StrokeDashArray="2 1" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding"
                        Value="{Binding (params:General.BoldPadding), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                <Setter Property="MinWidth" Value="70" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border" CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                    TextElement.FontWeight="{TemplateBinding FontWeight}"
                                    TextElement.FontStyle="{TemplateBinding FontStyle}"
                                    TextElement.FontStretch="{TemplateBinding FontStretch}"
                                    TextElement.FontSize="{TemplateBinding FontSize}"
                                    TextElement.FontFamily="{TemplateBinding FontFamily}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
                                    TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border"
                                            Value="{StaticResource GreenBrush}" />
                                    <Setter Property="BorderBrush" TargetName="border" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>

                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger>
                        <DataTrigger.Binding>
                            <Binding ConverterParameter="18" Mode="OneWay" Path="FontSize"
                                     RelativeSource="{RelativeSource Self}">
                                <Binding.Converter>
                                    <metro:IsGreaterThanConverter />
                                </Binding.Converter>
                            </Binding>
                        </DataTrigger.Binding>
                        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                    </DataTrigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{StaticResource GreenBrush}" />
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{StaticResource LightGreenBrush}" />
                        <Setter Property="BorderBrush" Value="{StaticResource LightGreenBrush}" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>

                </Style.Triggers>
            </Style>
        </Style.BasedOn>
        <Style.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LoginTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="CaretBrush" Value="Black" />
        <Setter Property="SelectionBrush" Value="{StaticResource GreenBrush}" />
        <Style.BasedOn>
            <Style TargetType="{x:Type Control}">
                <Setter Property="Background" Value="#7FFFFFFF" />
                <!--Sets the border color for the textbox-->
                <Setter Property="BorderBrush" Value="WhiteSmoke" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="FontStretch" Value="Normal" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Padding"
                        Value="{Binding (params:General.DefaultPadding), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu>
                            <ContextMenu.Style>
                                <Style TargetType="{x:Type ContextMenu}">
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="BorderBrush" Value="#FF4D4D4D" />
                                    <Setter Property="BorderThickness"
                                            Value="{Binding (params:General.DefaultThickness), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                                    <Setter Property="params:MenuBase.SubmenuBackground"
                                            Value="{Binding Background, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                                    <Setter Property="params:MenuBase.SubmenuBorderBrush"
                                            Value="{Binding BorderBrush, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                                    <Setter Property="params:MenuBase.SubmenuBorderThickness"
                                            Value="{Binding BorderThickness, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="FontSize"
                                            Value="{Binding (params:General.ContentFontSize), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                                    <Setter Property="FontStretch" Value="Normal" />
                                    <Setter Property="FontStyle" Value="Normal" />
                                    <Setter Property="FontWeight" Value="Normal" />
                                    <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                                    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
                                    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                                    <Setter Property="HasDropShadow"
                                            Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
                                    <Setter Property="params:General.ShadowBrush" Value="Black" />
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                    <Setter Property="Padding"
                                            Value="{Binding (params:General.BoldPadding), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ContextMenu}">
                                                <Border x:Name="LayoutRoot">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            Background="{TemplateBinding Background}"
                                                            RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                                                            TextElement.Foreground="{TemplateBinding Foreground}"
                                                            TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                            TextElement.FontStyle="{TemplateBinding FontStyle}"
                                                            TextElement.FontStretch="{TemplateBinding FontStretch}"
                                                            TextElement.FontSize="{TemplateBinding FontSize}"
                                                            TextElement.FontFamily="{TemplateBinding FontFamily}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
                                                            TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}">
                                                        <ItemsPresenter
                                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasDropShadow" Value="True">
                                                        <Setter Property="Effect" TargetName="LayoutRoot">
                                                            <Setter.Value>
                                                                <DropShadowEffect BlurRadius="4"
                                                                                  Color="{Binding (params:General.ShadowBrush).(SolidColorBrush.Color), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ContextMenu}}}"
                                                                                  Direction="315" Opacity="0.3"
                                                                                  ShadowDepth="2" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Background" TargetName="LayoutRoot"
                                                                Value="Transparent" />
                                                        <Setter Property="Padding" TargetName="LayoutRoot"
                                                                Value="0,0,6,6" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger>
                                            <DataTrigger.Binding>
                                                <Binding ConverterParameter="18" Mode="OneWay" Path="FontSize"
                                                         RelativeSource="{RelativeSource Self}">
                                                    <Binding.Converter>
                                                        <metro:IsGreaterThanConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </DataTrigger.Binding>
                                            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContextMenu.Style>
                            <MenuItem Command="ApplicationCommands.Cut" Header="Cut" />
                            <MenuItem Command="ApplicationCommands.Copy" Header="Copy" />
                            <MenuItem Command="ApplicationCommands.Paste" Header="Paste" />
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ScrollViewer x:Name="PART_ContentHost" Background="Transparent"
                                              RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                                              Foreground="{TemplateBinding Foreground}"
                                              FontWeight="{TemplateBinding FontWeight}"
                                              FontStyle="{TemplateBinding FontStyle}"
                                              FontStretch="{TemplateBinding FontStretch}"
                                              FontSize="{TemplateBinding FontSize}" Margin="{TemplateBinding Padding}"
                                              TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
                                              TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"
                                              Style="{DynamicResource ScrollViewerStyle}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <AdornedElementPlaceholder>
                                    <Border BorderThickness="0" />
                                </AdornedElementPlaceholder>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger>
                        <DataTrigger.Binding>
                            <Binding ConverterParameter="18" Mode="OneWay" Path="FontSize"
                                     RelativeSource="{RelativeSource Self}">
                                <Binding.Converter>
                                    <metro:IsGreaterThanConverter />
                                </Binding.Converter>
                            </Binding>
                        </DataTrigger.Binding>
                        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                    </DataTrigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <!--Sets the border color when mouse over the textbox-->
                        <Setter Property="BorderBrush" Value="White" />
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#4B4B4B" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>

                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.BasedOn>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                    <Condition Property="IsReadOnly" Value="False" />
                </MultiTrigger.Conditions>
                <!--Sets the border color when cursor is inside the textbox-->
                <Setter Property="BorderBrush" Value="White" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Foreground" Value="White" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PaswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="CaretBrush" Value="Black" />
        <Setter Property="SelectionBrush" Value="{StaticResource VioletBrush}" />
        <Style.BasedOn>
            <Style TargetType="{x:Type Control}">
                <Setter Property="Background" Value="#7FFFFFFF" />
                <!--Sets the border color for password box-->
                <Setter Property="BorderBrush" Value="WhiteSmoke" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="FontStretch" Value="Normal" />
                <Setter Property="FontStyle" Value="Normal" />
                <Setter Property="FontWeight" Value="Normal" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Padding"
                        Value="{Binding (params:General.DefaultPadding), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu>
                            <ContextMenu.Style>
                                <Style TargetType="{x:Type ContextMenu}">
                                    <Setter Property="Background" Value="White" />
                                    <Setter Property="BorderBrush" Value="#FF4D4D4D" />
                                    <Setter Property="BorderThickness"
                                            Value="{Binding (params:General.DefaultThickness), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                                    <Setter Property="params:MenuBase.SubmenuBackground"
                                            Value="{Binding Background, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                                    <Setter Property="params:MenuBase.SubmenuBorderBrush"
                                            Value="{Binding BorderBrush, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                                    <Setter Property="params:MenuBase.SubmenuBorderThickness"
                                            Value="{Binding BorderThickness, Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                                    <Setter Property="Foreground" Value="Black" />
                                    <Setter Property="FontSize"
                                            Value="{Binding (params:General.ContentFontSize), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                                    <Setter Property="FontStretch" Value="Normal" />
                                    <Setter Property="FontStyle" Value="Normal" />
                                    <Setter Property="FontWeight" Value="Normal" />
                                    <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
                                    <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
                                    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                                    <Setter Property="HasDropShadow"
                                            Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}" />
                                    <Setter Property="params:General.ShadowBrush" Value="Black" />
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="Grid.IsSharedSizeScope" Value="True" />
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                    <Setter Property="Padding"
                                            Value="{Binding (params:General.BoldPadding), Mode=OneWay, RelativeSource={RelativeSource Self}}" />
                                    <Setter Property="SnapsToDevicePixels" Value="True" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ContextMenu}">
                                                <Border x:Name="LayoutRoot">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            Background="{TemplateBinding Background}"
                                                            RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                                                            TextElement.Foreground="{TemplateBinding Foreground}"
                                                            TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                            TextElement.FontStyle="{TemplateBinding FontStyle}"
                                                            TextElement.FontStretch="{TemplateBinding FontStretch}"
                                                            TextElement.FontSize="{TemplateBinding FontSize}"
                                                            TextElement.FontFamily="{TemplateBinding FontFamily}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
                                                            TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}">
                                                        <ItemsPresenter
                                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                                                    </Border>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="HasDropShadow" Value="True">
                                                        <Setter Property="Effect" TargetName="LayoutRoot">
                                                            <Setter.Value>
                                                                <DropShadowEffect BlurRadius="4"
                                                                                  Color="{Binding (params:General.ShadowBrush).(SolidColorBrush.Color), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ContextMenu}}}"
                                                                                  Direction="315" Opacity="0.3"
                                                                                  ShadowDepth="2" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Background" TargetName="LayoutRoot"
                                                                Value="Transparent" />
                                                        <Setter Property="Padding" TargetName="LayoutRoot"
                                                                Value="0,0,6,6" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger>
                                            <DataTrigger.Binding>
                                                <Binding ConverterParameter="18" Mode="OneWay" Path="FontSize"
                                                         RelativeSource="{RelativeSource Self}">
                                                    <Binding.Converter>
                                                        <metro:IsGreaterThanConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </DataTrigger.Binding>
                                            <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContextMenu.Style>
                            <MenuItem Command="ApplicationCommands.Cut" Header="Cut" />
                            <MenuItem Command="ApplicationCommands.Copy" Header="Copy" />
                            <MenuItem Command="ApplicationCommands.Paste" Header="Paste" />
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ScrollViewer x:Name="PART_ContentHost" Background="Transparent"
                                              RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}"
                                              Foreground="{TemplateBinding Foreground}"
                                              FontWeight="{TemplateBinding FontWeight}"
                                              FontStyle="{TemplateBinding FontStyle}"
                                              FontStretch="{TemplateBinding FontStretch}"
                                              FontSize="{TemplateBinding FontSize}" Margin="{TemplateBinding Padding}"
                                              TextOptions.TextRenderingMode="{TemplateBinding TextOptions.TextRenderingMode}"
                                              TextOptions.TextFormattingMode="{TemplateBinding TextOptions.TextFormattingMode}"
                                              Style="{DynamicResource ScrollViewerStyle}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid>
                                <AdornedElementPlaceholder>
                                    <Border BorderThickness="0" />
                                </AdornedElementPlaceholder>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger>
                        <DataTrigger.Binding>
                            <Binding ConverterParameter="18" Mode="OneWay" Path="FontSize"
                                     RelativeSource="{RelativeSource Self}">
                                <Binding.Converter>
                                    <metro:IsGreaterThanConverter />
                                </Binding.Converter>
                            </Binding>
                        </DataTrigger.Binding>
                        <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                    </DataTrigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <!--Sets the border color when mouse over the password box-->
                        <Setter Property="BorderBrush" Value="White" />
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="#4B4B4B" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.BasedOn>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                </MultiTrigger.Conditions>
                <!--Sets the border color when cursor is inside the password box-->
                <Setter Property="BorderBrush" Value="White" />
                <Setter Property="BorderThickness" Value="2" />
                <Setter Property="Foreground" Value="White" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>